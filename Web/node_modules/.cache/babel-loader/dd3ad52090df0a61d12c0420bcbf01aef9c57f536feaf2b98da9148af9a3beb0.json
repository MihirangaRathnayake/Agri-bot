{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mihiranga Rathnayake\\\\Documents\\\\Git Hub\\\\Agri-Bot\\\\Web\\\\src\\\\components\\\\AgriBotChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { MessageCircle, Send, X, Bot, User, Lightbulb, Droplets, Thermometer } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AgriBotChatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'bot',\n    message: \"Hello! I'm Agri-Bot Assistant 🌱 I can help you with farming problems, crop advice, and analyze your sensor data. How can I assist you today?\",\n    timestamp: new Date()\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Agricultural knowledge base\n  const farmingKnowledge = {\n    soilMoisture: {\n      low: \"Your soil moisture is low. Consider watering your crops. For most vegetables, soil should be kept consistently moist but not waterlogged.\",\n      high: \"Your soil moisture is high. Ensure proper drainage to prevent root rot. Reduce watering frequency.\",\n      optimal: \"Your soil moisture levels are perfect! Continue your current watering schedule.\"\n    },\n    temperature: {\n      low: \"Temperature is low. Consider using row covers or greenhouse protection. Most crops grow best between 65-75°F (18-24°C).\",\n      high: \"Temperature is high. Provide shade cloth, increase watering, and ensure good ventilation. Heat stress can damage crops.\",\n      optimal: \"Temperature is in the optimal range for most crops. Great growing conditions!\"\n    },\n    humidity: {\n      low: \"Low humidity can stress plants. Consider misting or using humidity trays. Most plants prefer 40-60% humidity.\",\n      high: \"High humidity can promote fungal diseases. Ensure good air circulation and avoid overhead watering.\",\n      optimal: \"Humidity levels are ideal for healthy plant growth.\"\n    },\n    lightConditions: {\n      dark: \"It's currently dark. Most plants need 6-8 hours of sunlight daily. Consider supplemental grow lights if needed.\",\n      bright: \"Good light conditions! Plants are getting the sunlight they need for photosynthesis.\"\n    },\n    commonProblems: {\n      \"yellowing leaves\": \"Yellow leaves can indicate overwatering, nutrient deficiency (especially nitrogen), or natural aging. Check soil moisture and consider fertilizing.\",\n      \"wilting\": \"Wilting usually means underwatering, but can also indicate root problems or disease. Check soil moisture first.\",\n      \"brown spots\": \"Brown spots often indicate fungal diseases. Improve air circulation, avoid overhead watering, and remove affected leaves.\",\n      \"slow growth\": \"Slow growth can be due to insufficient light, poor soil, lack of nutrients, or wrong temperature. Check all growing conditions.\",\n      \"pest control\": \"For organic pest control, try neem oil, insecticidal soap, or beneficial insects. Identify the pest first for targeted treatment.\",\n      \"fertilizer\": \"Use balanced fertilizer (10-10-10) for general feeding. Nitrogen for leaves, phosphorus for roots/flowers, potassium for overall health.\",\n      \"watering\": \"Water deeply but less frequently. Check soil 1-2 inches down - if dry, it's time to water. Morning watering is best.\",\n      \"pruning\": \"Prune dead, diseased, or crossing branches. For vegetables, pinch flowers to encourage leaf growth, or vice versa.\"\n    },\n    crops: {\n      \"tomatoes\": \"Tomatoes need warm soil (60°F+), consistent watering, and support structures. Watch for blight and hornworms.\",\n      \"lettuce\": \"Lettuce prefers cool weather and consistent moisture. Harvest outer leaves first. Bolt in hot weather.\",\n      \"peppers\": \"Peppers need warm conditions and well-draining soil. Don't overwater - slightly dry soil intensifies flavor.\",\n      \"herbs\": \"Most herbs prefer well-draining soil and moderate watering. Pinch flowers to keep leaves tender.\",\n      \"carrots\": \"Carrots need loose, deep soil. Thin seedlings to prevent crowding. Keep soil consistently moist.\",\n      \"beans\": \"Beans fix nitrogen in soil. Don't over-fertilize with nitrogen. Provide support for climbing varieties.\"\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const getCurrentSensorData = () => {\n    // Get real sensor data from Firebase (same as your other components)\n    const sensorData = {\n      soilMoisture: 45,\n      // Default values\n      temperature: 22,\n      humidity: 55,\n      isDark: false\n    };\n\n    // Try to get real data from Firebase if available\n    if (typeof window !== 'undefined' && window.db) {\n      // This would be updated with real-time data\n      // For now, using default values but structure is ready for integration\n    }\n    return sensorData;\n  };\n  const analyzeSensorData = () => {\n    const data = getCurrentSensorData();\n    let analysis = \"📊 Current Sensor Analysis:\\n\\n\";\n\n    // Soil moisture analysis\n    if (data.soilMoisture < 30) {\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.low}\\n\\n`;\n    } else if (data.soilMoisture > 70) {\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.high}\\n\\n`;\n    } else {\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.optimal}\\n\\n`;\n    }\n\n    // Temperature analysis\n    if (data.temperature < 18) {\n      analysis += `🌡️ ${farmingKnowledge.temperature.low}\\n\\n`;\n    } else if (data.temperature > 30) {\n      analysis += `🌡️ ${farmingKnowledge.temperature.high}\\n\\n`;\n    } else {\n      analysis += `🌡️ ${farmingKnowledge.temperature.optimal}\\n\\n`;\n    }\n\n    // Light analysis\n    if (data.isDark) {\n      analysis += `☀️ ${farmingKnowledge.lightConditions.dark}`;\n    } else {\n      analysis += `☀️ ${farmingKnowledge.lightConditions.bright}`;\n    }\n    return analysis;\n  };\n  const generateBotResponse = userMessage => {\n    const message = userMessage.toLowerCase();\n\n    // Check for sensor data requests\n    if (message.includes('sensor') || message.includes('data') || message.includes('analysis')) {\n      return analyzeSensorData();\n    }\n\n    // Check for specific crop questions\n    for (const [crop, advice] of Object.entries(farmingKnowledge.crops)) {\n      if (message.includes(crop)) {\n        return `🌿 ${crop.charAt(0).toUpperCase() + crop.slice(1)} Growing Tips:\\n${advice}`;\n      }\n    }\n\n    // Check for common problems\n    for (const [problem, solution] of Object.entries(farmingKnowledge.commonProblems)) {\n      if (message.includes(problem)) {\n        return `💡 ${problem.charAt(0).toUpperCase() + problem.slice(1)} Solution:\\n${solution}`;\n      }\n    }\n\n    // General farming keywords\n    if (message.includes('water') || message.includes('irrigation')) {\n      return \"💧 Watering Tips:\\n\" + farmingKnowledge.commonProblems.watering;\n    }\n    if (message.includes('fertiliz') || message.includes('nutrient')) {\n      return \"🌱 Fertilizer Advice:\\n\" + farmingKnowledge.commonProblems.fertilizer;\n    }\n    if (message.includes('pest') || message.includes('bug') || message.includes('insect')) {\n      return \"🐛 Pest Control:\\n\" + farmingKnowledge.commonProblems[\"pest control\"];\n    }\n    if (message.includes('prune') || message.includes('trim')) {\n      return \"✂️ Pruning Guide:\\n\" + farmingKnowledge.commonProblems.pruning;\n    }\n\n    // Weather-related questions\n    if (message.includes('weather') || message.includes('climate')) {\n      return \"🌤️ Weather Considerations:\\nMonitor your local weather and adjust watering, protection, and harvesting schedules accordingly. Your sensors help track microclimatic conditions!\";\n    }\n\n    // Default responses for farming context\n    const defaultResponses = [\"🌱 I specialize in agricultural advice! Ask me about crop care, soil management, pest control, or let me analyze your sensor data.\", \"🚜 I can help with farming problems like plant diseases, watering schedules, fertilization, and interpreting your IoT sensor readings.\", \"🌾 Try asking about specific crops, common plant problems, or request a sensor data analysis for personalized advice!\", \"🌿 I'm here to help with your farming needs! Ask about plant care, soil conditions, or say 'analyze sensors' for current data insights.\"];\n    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n  };\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      message: inputMessage,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsTyping(true);\n\n    // Simulate typing delay\n    setTimeout(() => {\n      const botResponse = {\n        id: Date.now() + 1,\n        type: 'bot',\n        message: generateBotResponse(inputMessage),\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botResponse]);\n      setIsTyping(false);\n    }, 1000 + Math.random() * 1000);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const quickActions = [{\n    text: \"Analyze my sensors\",\n    icon: \"📊\"\n  }, {\n    text: \"Watering advice\",\n    icon: \"💧\"\n  }, {\n    text: \"Pest control help\",\n    icon: \"🐛\"\n  }, {\n    text: \"Fertilizer tips\",\n    icon: \"🌱\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.button, {\n      onClick: () => setIsOpen(!isOpen),\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.9\n      },\n      className: \"fixed bottom-8 left-8 w-14 h-14 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center z-50 group\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: isOpen ? /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            rotate: -90,\n            opacity: 0\n          },\n          animate: {\n            rotate: 0,\n            opacity: 1\n          },\n          exit: {\n            rotate: 90,\n            opacity: 0\n          },\n          transition: {\n            duration: 0.2\n          },\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            rotate: -90,\n            opacity: 0\n          },\n          animate: {\n            rotate: 0,\n            opacity: 1\n          },\n          exit: {\n            rotate: 90,\n            opacity: 0\n          },\n          transition: {\n            duration: 0.2\n          },\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            animate: {\n              scale: [1, 1.2, 1]\n            },\n            transition: {\n              duration: 2,\n              repeat: Infinity\n            },\n            className: \"absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, \"chat\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          scale: 0.8,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          scale: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          scale: 0.8,\n          y: 20\n        },\n        transition: {\n          duration: 0.3\n        },\n        className: \"fixed bottom-24 left-8 w-96 h-96 bg-dark-800/95 backdrop-blur-xl border border-primary-500/20 rounded-2xl shadow-2xl z-40 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-700 flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Bot, {\n              className: \"w-8 h-8 text-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -bottom-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-white\",\n              children: \"Agri-Bot Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: \"Agricultural Expert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n          children: [messages.map(msg => /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: `flex ${msg.type === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-start space-x-2 max-w-[80%] ${msg.type === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-6 h-6 rounded-full flex items-center justify-center ${msg.type === 'user' ? 'bg-primary-500' : 'bg-green-500'}`,\n                children: msg.type === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 46\n                }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-3 rounded-2xl ${msg.type === 'user' ? 'bg-primary-500 text-white' : 'bg-gray-700 text-gray-100'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm whitespace-pre-line\",\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs opacity-70 mt-1\",\n                  children: msg.timestamp.toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full bg-green-500 flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(Bot, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-700 p-3 rounded-2xl\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-1\",\n                  children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                    animate: {\n                      scale: [1, 1.2, 1]\n                    },\n                    transition: {\n                      duration: 0.6,\n                      repeat: Infinity,\n                      delay: 0\n                    },\n                    className: \"w-2 h-2 bg-gray-400 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    animate: {\n                      scale: [1, 1.2, 1]\n                    },\n                    transition: {\n                      duration: 0.6,\n                      repeat: Infinity,\n                      delay: 0.2\n                    },\n                    className: \"w-2 h-2 bg-gray-400 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    animate: {\n                      scale: [1, 1.2, 1]\n                    },\n                    transition: {\n                      duration: 0.6,\n                      repeat: Infinity,\n                      delay: 0.4\n                    },\n                    className: \"w-2 h-2 bg-gray-400 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-1 mb-2\",\n            children: quickActions.map((action, index) => /*#__PURE__*/_jsxDEV(motion.button, {\n              whileHover: {\n                scale: 1.05\n              },\n              whileTap: {\n                scale: 0.95\n              },\n              onClick: () => {\n                setInputMessage(action.text);\n                setTimeout(handleSendMessage, 100);\n              },\n              className: \"px-2 py-1 bg-gray-700 hover:bg-gray-600 text-gray-300 rounded-lg text-xs transition-colors duration-200 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: action.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: action.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Ask about farming, crops, or sensors...\",\n              className: \"flex-1 bg-gray-700 text-white placeholder-gray-400 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n              whileHover: {\n                scale: 1.1\n              },\n              whileTap: {\n                scale: 0.9\n              },\n              onClick: handleSendMessage,\n              disabled: !inputMessage.trim(),\n              className: \"bg-green-500 hover:bg-green-600 disabled:bg-gray-600 text-white p-2 rounded-lg transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AgriBotChatbot, \"H+I+LbAsGVP/PBgt2DYe2aDS5Mw=\");\n_c = AgriBotChatbot;\nexport default AgriBotChatbot;\nvar _c;\n$RefreshReg$(_c, \"AgriBotChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","motion","AnimatePresence","MessageCircle","Send","X","Bot","User","Lightbulb","Droplets","Thermometer","jsxDEV","_jsxDEV","Fragment","_Fragment","AgriBotChatbot","_s","isOpen","setIsOpen","messages","setMessages","id","type","message","timestamp","Date","inputMessage","setInputMessage","isTyping","setIsTyping","messagesEndRef","farmingKnowledge","soilMoisture","low","high","optimal","temperature","humidity","lightConditions","dark","bright","commonProblems","crops","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","getCurrentSensorData","sensorData","isDark","window","db","analyzeSensorData","data","analysis","generateBotResponse","userMessage","toLowerCase","includes","crop","advice","Object","entries","charAt","toUpperCase","slice","problem","solution","watering","fertilizer","pruning","defaultResponses","Math","floor","random","length","handleSendMessage","trim","now","prev","setTimeout","botResponse","handleKeyPress","e","key","shiftKey","preventDefault","quickActions","text","icon","children","button","onClick","whileHover","scale","whileTap","className","mode","div","initial","rotate","opacity","animate","exit","transition","duration","size","fileName","_jsxFileName","lineNumber","columnNumber","repeat","Infinity","y","map","msg","toLocaleTimeString","hour","minute","delay","ref","action","index","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Mihiranga Rathnayake/Documents/Git Hub/Agri-Bot/Web/src/components/AgriBotChatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { MessageCircle, Send, X, Bot, User, Lightbulb, Droplets, Thermometer } from 'lucide-react';\r\n\r\nconst AgriBotChatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: 1,\r\n      type: 'bot',\r\n      message: \"Hello! I'm Agri-Bot Assistant 🌱 I can help you with farming problems, crop advice, and analyze your sensor data. How can I assist you today?\",\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Agricultural knowledge base\r\n  const farmingKnowledge = {\r\n    soilMoisture: {\r\n      low: \"Your soil moisture is low. Consider watering your crops. For most vegetables, soil should be kept consistently moist but not waterlogged.\",\r\n      high: \"Your soil moisture is high. Ensure proper drainage to prevent root rot. Reduce watering frequency.\",\r\n      optimal: \"Your soil moisture levels are perfect! Continue your current watering schedule.\"\r\n    },\r\n    temperature: {\r\n      low: \"Temperature is low. Consider using row covers or greenhouse protection. Most crops grow best between 65-75°F (18-24°C).\",\r\n      high: \"Temperature is high. Provide shade cloth, increase watering, and ensure good ventilation. Heat stress can damage crops.\",\r\n      optimal: \"Temperature is in the optimal range for most crops. Great growing conditions!\"\r\n    },\r\n    humidity: {\r\n      low: \"Low humidity can stress plants. Consider misting or using humidity trays. Most plants prefer 40-60% humidity.\",\r\n      high: \"High humidity can promote fungal diseases. Ensure good air circulation and avoid overhead watering.\",\r\n      optimal: \"Humidity levels are ideal for healthy plant growth.\"\r\n    },\r\n    lightConditions: {\r\n      dark: \"It's currently dark. Most plants need 6-8 hours of sunlight daily. Consider supplemental grow lights if needed.\",\r\n      bright: \"Good light conditions! Plants are getting the sunlight they need for photosynthesis.\"\r\n    },\r\n    commonProblems: {\r\n      \"yellowing leaves\": \"Yellow leaves can indicate overwatering, nutrient deficiency (especially nitrogen), or natural aging. Check soil moisture and consider fertilizing.\",\r\n      \"wilting\": \"Wilting usually means underwatering, but can also indicate root problems or disease. Check soil moisture first.\",\r\n      \"brown spots\": \"Brown spots often indicate fungal diseases. Improve air circulation, avoid overhead watering, and remove affected leaves.\",\r\n      \"slow growth\": \"Slow growth can be due to insufficient light, poor soil, lack of nutrients, or wrong temperature. Check all growing conditions.\",\r\n      \"pest control\": \"For organic pest control, try neem oil, insecticidal soap, or beneficial insects. Identify the pest first for targeted treatment.\",\r\n      \"fertilizer\": \"Use balanced fertilizer (10-10-10) for general feeding. Nitrogen for leaves, phosphorus for roots/flowers, potassium for overall health.\",\r\n      \"watering\": \"Water deeply but less frequently. Check soil 1-2 inches down - if dry, it's time to water. Morning watering is best.\",\r\n      \"pruning\": \"Prune dead, diseased, or crossing branches. For vegetables, pinch flowers to encourage leaf growth, or vice versa.\"\r\n    },\r\n    crops: {\r\n      \"tomatoes\": \"Tomatoes need warm soil (60°F+), consistent watering, and support structures. Watch for blight and hornworms.\",\r\n      \"lettuce\": \"Lettuce prefers cool weather and consistent moisture. Harvest outer leaves first. Bolt in hot weather.\",\r\n      \"peppers\": \"Peppers need warm conditions and well-draining soil. Don't overwater - slightly dry soil intensifies flavor.\",\r\n      \"herbs\": \"Most herbs prefer well-draining soil and moderate watering. Pinch flowers to keep leaves tender.\",\r\n      \"carrots\": \"Carrots need loose, deep soil. Thin seedlings to prevent crowding. Keep soil consistently moist.\",\r\n      \"beans\": \"Beans fix nitrogen in soil. Don't over-fertilize with nitrogen. Provide support for climbing varieties.\"\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const getCurrentSensorData = () => {\r\n    // Get real sensor data from Firebase (same as your other components)\r\n    const sensorData = {\r\n      soilMoisture: 45, // Default values\r\n      temperature: 22,\r\n      humidity: 55,\r\n      isDark: false\r\n    };\r\n\r\n    // Try to get real data from Firebase if available\r\n    if (typeof window !== 'undefined' && window.db) {\r\n      // This would be updated with real-time data\r\n      // For now, using default values but structure is ready for integration\r\n    }\r\n\r\n    return sensorData;\r\n  };\r\n\r\n  const analyzeSensorData = () => {\r\n    const data = getCurrentSensorData();\r\n    let analysis = \"📊 Current Sensor Analysis:\\n\\n\";\r\n    \r\n    // Soil moisture analysis\r\n    if (data.soilMoisture < 30) {\r\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.low}\\n\\n`;\r\n    } else if (data.soilMoisture > 70) {\r\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.high}\\n\\n`;\r\n    } else {\r\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.optimal}\\n\\n`;\r\n    }\r\n\r\n    // Temperature analysis\r\n    if (data.temperature < 18) {\r\n      analysis += `🌡️ ${farmingKnowledge.temperature.low}\\n\\n`;\r\n    } else if (data.temperature > 30) {\r\n      analysis += `🌡️ ${farmingKnowledge.temperature.high}\\n\\n`;\r\n    } else {\r\n      analysis += `🌡️ ${farmingKnowledge.temperature.optimal}\\n\\n`;\r\n    }\r\n\r\n    // Light analysis\r\n    if (data.isDark) {\r\n      analysis += `☀️ ${farmingKnowledge.lightConditions.dark}`;\r\n    } else {\r\n      analysis += `☀️ ${farmingKnowledge.lightConditions.bright}`;\r\n    }\r\n\r\n    return analysis;\r\n  };\r\n\r\n  const generateBotResponse = (userMessage) => {\r\n    const message = userMessage.toLowerCase();\r\n    \r\n    // Check for sensor data requests\r\n    if (message.includes('sensor') || message.includes('data') || message.includes('analysis')) {\r\n      return analyzeSensorData();\r\n    }\r\n\r\n    // Check for specific crop questions\r\n    for (const [crop, advice] of Object.entries(farmingKnowledge.crops)) {\r\n      if (message.includes(crop)) {\r\n        return `🌿 ${crop.charAt(0).toUpperCase() + crop.slice(1)} Growing Tips:\\n${advice}`;\r\n      }\r\n    }\r\n\r\n    // Check for common problems\r\n    for (const [problem, solution] of Object.entries(farmingKnowledge.commonProblems)) {\r\n      if (message.includes(problem)) {\r\n        return `💡 ${problem.charAt(0).toUpperCase() + problem.slice(1)} Solution:\\n${solution}`;\r\n      }\r\n    }\r\n\r\n    // General farming keywords\r\n    if (message.includes('water') || message.includes('irrigation')) {\r\n      return \"💧 Watering Tips:\\n\" + farmingKnowledge.commonProblems.watering;\r\n    }\r\n\r\n    if (message.includes('fertiliz') || message.includes('nutrient')) {\r\n      return \"🌱 Fertilizer Advice:\\n\" + farmingKnowledge.commonProblems.fertilizer;\r\n    }\r\n\r\n    if (message.includes('pest') || message.includes('bug') || message.includes('insect')) {\r\n      return \"🐛 Pest Control:\\n\" + farmingKnowledge.commonProblems[\"pest control\"];\r\n    }\r\n\r\n    if (message.includes('prune') || message.includes('trim')) {\r\n      return \"✂️ Pruning Guide:\\n\" + farmingKnowledge.commonProblems.pruning;\r\n    }\r\n\r\n    // Weather-related questions\r\n    if (message.includes('weather') || message.includes('climate')) {\r\n      return \"🌤️ Weather Considerations:\\nMonitor your local weather and adjust watering, protection, and harvesting schedules accordingly. Your sensors help track microclimatic conditions!\";\r\n    }\r\n\r\n    // Default responses for farming context\r\n    const defaultResponses = [\r\n      \"🌱 I specialize in agricultural advice! Ask me about crop care, soil management, pest control, or let me analyze your sensor data.\",\r\n      \"🚜 I can help with farming problems like plant diseases, watering schedules, fertilization, and interpreting your IoT sensor readings.\",\r\n      \"🌾 Try asking about specific crops, common plant problems, or request a sensor data analysis for personalized advice!\",\r\n      \"🌿 I'm here to help with your farming needs! Ask about plant care, soil conditions, or say 'analyze sensors' for current data insights.\"\r\n    ];\r\n\r\n    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      message: inputMessage,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputMessage('');\r\n    setIsTyping(true);\r\n\r\n    // Simulate typing delay\r\n    setTimeout(() => {\r\n      const botResponse = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        message: generateBotResponse(inputMessage),\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, botResponse]);\r\n      setIsTyping(false);\r\n    }, 1000 + Math.random() * 1000);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const quickActions = [\r\n    { text: \"Analyze my sensors\", icon: \"📊\" },\r\n    { text: \"Watering advice\", icon: \"💧\" },\r\n    { text: \"Pest control help\", icon: \"🐛\" },\r\n    { text: \"Fertilizer tips\", icon: \"🌱\" }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* Chat Toggle Button */}\r\n      <motion.button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n        className=\"fixed bottom-8 left-8 w-14 h-14 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center z-50 group\"\r\n      >\r\n        <AnimatePresence mode=\"wait\">\r\n          {isOpen ? (\r\n            <motion.div\r\n              key=\"close\"\r\n              initial={{ rotate: -90, opacity: 0 }}\r\n              animate={{ rotate: 0, opacity: 1 }}\r\n              exit={{ rotate: 90, opacity: 0 }}\r\n              transition={{ duration: 0.2 }}\r\n            >\r\n              <X size={24} />\r\n            </motion.div>\r\n          ) : (\r\n            <motion.div\r\n              key=\"chat\"\r\n              initial={{ rotate: -90, opacity: 0 }}\r\n              animate={{ rotate: 0, opacity: 1 }}\r\n              exit={{ rotate: 90, opacity: 0 }}\r\n              transition={{ duration: 0.2 }}\r\n              className=\"relative\"\r\n            >\r\n              <Bot size={24} />\r\n              <motion.div\r\n                animate={{ scale: [1, 1.2, 1] }}\r\n                transition={{ duration: 2, repeat: Infinity }}\r\n                className=\"absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full\"\r\n              />\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </motion.button>\r\n\r\n      {/* Chat Window */}\r\n      <AnimatePresence>\r\n        {isOpen && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.8, y: 20 }}\r\n            animate={{ opacity: 1, scale: 1, y: 0 }}\r\n            exit={{ opacity: 0, scale: 0.8, y: 20 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"fixed bottom-24 left-8 w-96 h-96 bg-dark-800/95 backdrop-blur-xl border border-primary-500/20 rounded-2xl shadow-2xl z-40 flex flex-col\"\r\n          >\r\n            {/* Header */}\r\n            <div className=\"p-4 border-b border-gray-700 flex items-center space-x-3\">\r\n              <div className=\"relative\">\r\n                <Bot className=\"w-8 h-8 text-green-400\" />\r\n                <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"font-semibold text-white\">Agri-Bot Assistant</h3>\r\n                <p className=\"text-xs text-gray-400\">Agricultural Expert</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Messages */}\r\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n              {messages.map((msg) => (\r\n                <motion.div\r\n                  key={msg.id}\r\n                  initial={{ opacity: 0, y: 10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className={`flex ${msg.type === 'user' ? 'justify-end' : 'justify-start'}`}\r\n                >\r\n                  <div className={`flex items-start space-x-2 max-w-[80%] ${msg.type === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`}>\r\n                    <div className={`w-6 h-6 rounded-full flex items-center justify-center ${\r\n                      msg.type === 'user' ? 'bg-primary-500' : 'bg-green-500'\r\n                    }`}>\r\n                      {msg.type === 'user' ? <User size={14} /> : <Bot size={14} />}\r\n                    </div>\r\n                    <div className={`p-3 rounded-2xl ${\r\n                      msg.type === 'user' \r\n                        ? 'bg-primary-500 text-white' \r\n                        : 'bg-gray-700 text-gray-100'\r\n                    }`}>\r\n                      <p className=\"text-sm whitespace-pre-line\">{msg.message}</p>\r\n                      <p className=\"text-xs opacity-70 mt-1\">\r\n                        {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n              \r\n              {isTyping && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"flex justify-start\"\r\n                >\r\n                  <div className=\"flex items-start space-x-2\">\r\n                    <div className=\"w-6 h-6 rounded-full bg-green-500 flex items-center justify-center\">\r\n                      <Bot size={14} />\r\n                    </div>\r\n                    <div className=\"bg-gray-700 p-3 rounded-2xl\">\r\n                      <div className=\"flex space-x-1\">\r\n                        <motion.div\r\n                          animate={{ scale: [1, 1.2, 1] }}\r\n                          transition={{ duration: 0.6, repeat: Infinity, delay: 0 }}\r\n                          className=\"w-2 h-2 bg-gray-400 rounded-full\"\r\n                        />\r\n                        <motion.div\r\n                          animate={{ scale: [1, 1.2, 1] }}\r\n                          transition={{ duration: 0.6, repeat: Infinity, delay: 0.2 }}\r\n                          className=\"w-2 h-2 bg-gray-400 rounded-full\"\r\n                        />\r\n                        <motion.div\r\n                          animate={{ scale: [1, 1.2, 1] }}\r\n                          transition={{ duration: 0.6, repeat: Infinity, delay: 0.4 }}\r\n                          className=\"w-2 h-2 bg-gray-400 rounded-full\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {/* Quick Actions */}\r\n            <div className=\"p-2 border-t border-gray-700\">\r\n              <div className=\"flex flex-wrap gap-1 mb-2\">\r\n                {quickActions.map((action, index) => (\r\n                  <motion.button\r\n                    key={index}\r\n                    whileHover={{ scale: 1.05 }}\r\n                    whileTap={{ scale: 0.95 }}\r\n                    onClick={() => {\r\n                      setInputMessage(action.text);\r\n                      setTimeout(handleSendMessage, 100);\r\n                    }}\r\n                    className=\"px-2 py-1 bg-gray-700 hover:bg-gray-600 text-gray-300 rounded-lg text-xs transition-colors duration-200 flex items-center space-x-1\"\r\n                  >\r\n                    <span>{action.icon}</span>\r\n                    <span>{action.text}</span>\r\n                  </motion.button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Input */}\r\n            <div className=\"p-4 border-t border-gray-700\">\r\n              <div className=\"flex space-x-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={inputMessage}\r\n                  onChange={(e) => setInputMessage(e.target.value)}\r\n                  onKeyPress={handleKeyPress}\r\n                  placeholder=\"Ask about farming, crops, or sensors...\"\r\n                  className=\"flex-1 bg-gray-700 text-white placeholder-gray-400 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n                />\r\n                <motion.button\r\n                  whileHover={{ scale: 1.1 }}\r\n                  whileTap={{ scale: 0.9 }}\r\n                  onClick={handleSendMessage}\r\n                  disabled={!inputMessage.trim()}\r\n                  className=\"bg-green-500 hover:bg-green-600 disabled:bg-gray-600 text-white p-2 rounded-lg transition-colors duration-200\"\r\n                >\r\n                  <Send size={16} />\r\n                </motion.button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgriBotChatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}