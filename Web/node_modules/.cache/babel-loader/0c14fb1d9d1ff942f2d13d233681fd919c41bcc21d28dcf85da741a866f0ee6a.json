{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mihiranga Rathnayake\\\\Documents\\\\Git Hub\\\\Agri-Bot\\\\Web\\\\src\\\\components\\\\AgriBotChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { MessageCircle, Send, X, Bot, User, Lightbulb, Droplets, Thermometer, ChevronDown } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AgriBotChatbot = ({\n  isOpen: externalIsOpen,\n  onToggle\n}) => {\n  _s();\n  const [internalIsOpen, setInternalIsOpen] = useState(false);\n\n  // Use external control if provided, otherwise use internal state\n  const isOpen = externalIsOpen !== undefined ? externalIsOpen : internalIsOpen;\n  const setIsOpen = onToggle || setInternalIsOpen;\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'bot',\n    message: \"Hello! I'm Agri-Bot Assistant 🌱 I can help you with farming problems, crop advice, and analyze your sensor data. How can I assist you today?\",\n    timestamp: new Date()\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Agricultural knowledge base\n  const farmingKnowledge = {\n    soilMoisture: {\n      low: \"Your soil moisture is low. Consider watering your crops. For most vegetables, soil should be kept consistently moist but not waterlogged.\",\n      high: \"Your soil moisture is high. Ensure proper drainage to prevent root rot. Reduce watering frequency.\",\n      optimal: \"Your soil moisture levels are perfect! Continue your current watering schedule.\"\n    },\n    temperature: {\n      low: \"Temperature is low. Consider using row covers or greenhouse protection. Most crops grow best between 65-75°F (18-24°C).\",\n      high: \"Temperature is high. Provide shade cloth, increase watering, and ensure good ventilation. Heat stress can damage crops.\",\n      optimal: \"Temperature is in the optimal range for most crops. Great growing conditions!\"\n    },\n    humidity: {\n      low: \"Low humidity can stress plants. Consider misting or using humidity trays. Most plants prefer 40-60% humidity.\",\n      high: \"High humidity can promote fungal diseases. Ensure good air circulation and avoid overhead watering.\",\n      optimal: \"Humidity levels are ideal for healthy plant growth.\"\n    },\n    lightConditions: {\n      dark: \"It's currently dark. Most plants need 6-8 hours of sunlight daily. Consider supplemental grow lights if needed.\",\n      bright: \"Good light conditions! Plants are getting the sunlight they need for photosynthesis.\"\n    },\n    commonProblems: {\n      \"yellowing leaves\": \"Yellow leaves can indicate overwatering, nutrient deficiency (especially nitrogen), or natural aging. Check soil moisture and consider fertilizing.\",\n      \"wilting\": \"Wilting usually means underwatering, but can also indicate root problems or disease. Check soil moisture first.\",\n      \"brown spots\": \"Brown spots often indicate fungal diseases. Improve air circulation, avoid overhead watering, and remove affected leaves.\",\n      \"slow growth\": \"Slow growth can be due to insufficient light, poor soil, lack of nutrients, or wrong temperature. Check all growing conditions.\",\n      \"pest control\": \"For organic pest control, try neem oil, insecticidal soap, or beneficial insects. Identify the pest first for targeted treatment.\",\n      \"fertilizer\": \"Use balanced fertilizer (10-10-10) for general feeding. Nitrogen for leaves, phosphorus for roots/flowers, potassium for overall health.\",\n      \"watering\": \"Water deeply but less frequently. Check soil 1-2 inches down - if dry, it's time to water. Morning watering is best.\",\n      \"pruning\": \"Prune dead, diseased, or crossing branches. For vegetables, pinch flowers to encourage leaf growth, or vice versa.\"\n    },\n    crops: {\n      \"tomatoes\": \"Tomatoes need warm soil (60°F+), consistent watering, and support structures. Watch for blight and hornworms.\",\n      \"lettuce\": \"Lettuce prefers cool weather and consistent moisture. Harvest outer leaves first. Bolt in hot weather.\",\n      \"peppers\": \"Peppers need warm conditions and well-draining soil. Don't overwater - slightly dry soil intensifies flavor.\",\n      \"herbs\": \"Most herbs prefer well-draining soil and moderate watering. Pinch flowers to keep leaves tender.\",\n      \"carrots\": \"Carrots need loose, deep soil. Thin seedlings to prevent crowding. Keep soil consistently moist.\",\n      \"beans\": \"Beans fix nitrogen in soil. Don't over-fertilize with nitrogen. Provide support for climbing varieties.\"\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const getCurrentSensorData = () => {\n    // Get real sensor data from Firebase (same as your other components)\n    const sensorData = {\n      soilMoisture: 45,\n      // Default values\n      temperature: 22,\n      humidity: 55,\n      isDark: false\n    };\n\n    // Try to get real data from Firebase if available\n    if (typeof window !== 'undefined' && window.db) {\n      // This would be updated with real-time data\n      // For now, using default values but structure is ready for integration\n    }\n    return sensorData;\n  };\n  const analyzeSensorData = () => {\n    const data = getCurrentSensorData();\n    let analysis = \"📊 Current Sensor Analysis:\\n\\n\";\n\n    // Soil moisture analysis\n    if (data.soilMoisture < 30) {\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.low}\\n\\n`;\n    } else if (data.soilMoisture > 70) {\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.high}\\n\\n`;\n    } else {\n      analysis += `🌱 ${farmingKnowledge.soilMoisture.optimal}\\n\\n`;\n    }\n\n    // Temperature analysis\n    if (data.temperature < 18) {\n      analysis += `🌡️ ${farmingKnowledge.temperature.low}\\n\\n`;\n    } else if (data.temperature > 30) {\n      analysis += `🌡️ ${farmingKnowledge.temperature.high}\\n\\n`;\n    } else {\n      analysis += `🌡️ ${farmingKnowledge.temperature.optimal}\\n\\n`;\n    }\n\n    // Light analysis\n    if (data.isDark) {\n      analysis += `☀️ ${farmingKnowledge.lightConditions.dark}`;\n    } else {\n      analysis += `☀️ ${farmingKnowledge.lightConditions.bright}`;\n    }\n    return analysis;\n  };\n  const generateBotResponse = userMessage => {\n    const message = userMessage.toLowerCase();\n\n    // Check for sensor data requests\n    if (message.includes('sensor') || message.includes('data') || message.includes('analysis')) {\n      return analyzeSensorData();\n    }\n\n    // Check for specific crop questions\n    for (const [crop, advice] of Object.entries(farmingKnowledge.crops)) {\n      if (message.includes(crop)) {\n        return `🌿 ${crop.charAt(0).toUpperCase() + crop.slice(1)} Growing Tips:\\n${advice}`;\n      }\n    }\n\n    // Check for common problems\n    for (const [problem, solution] of Object.entries(farmingKnowledge.commonProblems)) {\n      if (message.includes(problem)) {\n        return `💡 ${problem.charAt(0).toUpperCase() + problem.slice(1)} Solution:\\n${solution}`;\n      }\n    }\n\n    // General farming keywords\n    if (message.includes('water') || message.includes('irrigation')) {\n      return \"💧 Watering Tips:\\n\" + farmingKnowledge.commonProblems.watering;\n    }\n    if (message.includes('fertiliz') || message.includes('nutrient')) {\n      return \"🌱 Fertilizer Advice:\\n\" + farmingKnowledge.commonProblems.fertilizer;\n    }\n    if (message.includes('pest') || message.includes('bug') || message.includes('insect')) {\n      return \"🐛 Pest Control:\\n\" + farmingKnowledge.commonProblems[\"pest control\"];\n    }\n    if (message.includes('prune') || message.includes('trim')) {\n      return \"✂️ Pruning Guide:\\n\" + farmingKnowledge.commonProblems.pruning;\n    }\n\n    // Weather-related questions\n    if (message.includes('weather') || message.includes('climate')) {\n      return \"🌤️ Weather Considerations:\\nMonitor your local weather and adjust watering, protection, and harvesting schedules accordingly. Your sensors help track microclimatic conditions!\";\n    }\n\n    // Seasonal advice\n    if (message.includes('season') || message.includes('when to plant')) {\n      return \"🗓️ Seasonal Planting Guide:\\n• Spring: Lettuce, peas, carrots, herbs\\n• Summer: Tomatoes, peppers, beans, squash\\n• Fall: Broccoli, cabbage, spinach\\n• Winter: Plan and prepare for next season!\";\n    }\n\n    // Soil-related questions\n    if (message.includes('soil') && !message.includes('moisture')) {\n      return \"🌍 Soil Health Tips:\\n• Test pH (6.0-7.0 for most crops)\\n• Add compost for nutrients\\n• Ensure good drainage\\n• Rotate crops to prevent depletion\\n• Your soil moisture sensor helps monitor watering needs!\";\n    }\n\n    // Disease identification\n    if (message.includes('disease') || message.includes('sick') || message.includes('dying')) {\n      return \"🏥 Plant Disease Diagnosis:\\n• Yellow leaves: Overwatering or nitrogen deficiency\\n• Brown/black spots: Fungal infection\\n• Wilting: Root problems or underwatering\\n• Stunted growth: Nutrient deficiency or poor soil\\nSend me more specific symptoms for better diagnosis!\";\n    }\n\n    // Harvest timing\n    if (message.includes('harvest') || message.includes('ready') || message.includes('ripe')) {\n      return \"🌾 Harvest Timing:\\n• Tomatoes: When fully colored but still firm\\n• Lettuce: Outer leaves first, before bolting\\n• Peppers: When full size and colored\\n• Herbs: Before flowering for best flavor\\nWhat crop are you asking about?\";\n    }\n\n    // Default responses for farming context\n    const defaultResponses = [\"🌱 I specialize in agricultural advice! Ask me about:\\n• Crop care and planting\\n• Soil management\\n• Pest and disease control\\n• Sensor data analysis\\n• Watering and fertilization\", \"🚜 I can help with farming problems like:\\n• Plant diseases and pests\\n• Watering schedules\\n• Fertilization timing\\n• Interpreting your IoT sensor readings\\n• Seasonal planting advice\", \"🌾 Try asking about:\\n• Specific crops (tomatoes, lettuce, etc.)\\n• Common plant problems\\n• 'Analyze sensors' for current data\\n• Seasonal growing tips\\n• Soil and water management\", \"🌿 I'm your agricultural assistant! I can help with:\\n• Plant care and troubleshooting\\n• Soil and water conditions\\n• Pest control strategies\\n• Harvest timing\\n• Smart farming with your IoT sensors\"];\n    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n  };\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      message: inputMessage,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsTyping(true);\n\n    // Simulate typing delay\n    setTimeout(() => {\n      const botResponse = {\n        id: Date.now() + 1,\n        type: 'bot',\n        message: generateBotResponse(inputMessage),\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botResponse]);\n      setIsTyping(false);\n    }, 1000 + Math.random() * 1000);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const quickActions = [{\n    text: \"Analyze my sensors\",\n    icon: \"📊\"\n  }, {\n    text: \"Watering advice\",\n    icon: \"💧\"\n  }, {\n    text: \"Pest control help\",\n    icon: \"🐛\"\n  }, {\n    text: \"Fertilizer tips\",\n    icon: \"🌱\"\n  }, {\n    text: \"Tomato growing\",\n    icon: \"🍅\"\n  }, {\n    text: \"Soil health\",\n    icon: \"🌍\"\n  }, {\n    text: \"Disease diagnosis\",\n    icon: \"🏥\"\n  }, {\n    text: \"Harvest timing\",\n    icon: \"🌾\"\n  }];\n\n  // Daily farming tips\n  const dailyTips = [\"💡 Tip: Water plants early morning to reduce evaporation and prevent fungal diseases!\", \"💡 Tip: Companion planting - grow basil near tomatoes to improve flavor and repel pests!\", \"💡 Tip: Check soil pH regularly - most vegetables prefer 6.0-7.0 pH for optimal nutrient uptake!\", \"💡 Tip: Mulch around plants to retain moisture and suppress weeds naturally!\", \"💡 Tip: Rotate crops each season to prevent soil depletion and reduce pest buildup!\"];\n\n  // Add a daily tip when chatbot opens\n  useEffect(() => {\n    if (isOpen && messages.length === 1) {\n      const randomTip = dailyTips[Math.floor(Math.random() * dailyTips.length)];\n      setTimeout(() => {\n        const tipMessage = {\n          id: Date.now(),\n          type: 'bot',\n          message: randomTip,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, tipMessage]);\n      }, 2000);\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          scale: 0.8,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          scale: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          scale: 0.8,\n          y: 20\n        },\n        transition: {\n          duration: 0.3\n        },\n        className: \"fixed bottom-24 left-8 w-[480px] h-[600px] bg-dark-800/95 backdrop-blur-xl border border-primary-500/20 rounded-2xl shadow-2xl z-40 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-700 flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Bot, {\n              className: \"w-8 h-8 text-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -bottom-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-white\",\n              children: \"Agri-Bot Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: \"Agricultural Expert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n          children: [messages.map(msg => /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: `flex ${msg.type === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-start space-x-2 max-w-[80%] ${msg.type === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-6 h-6 rounded-full flex items-center justify-center ${msg.type === 'user' ? 'bg-primary-500' : 'bg-green-500'}`,\n                children: msg.type === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 68\n                }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 89\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-3 rounded-2xl ${msg.type === 'user' ? 'bg-primary-500 text-white' : 'bg-gray-700 text-gray-100'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm whitespace-pre-line\",\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs opacity-70 mt-1\",\n                  children: msg.timestamp.toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 37\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full bg-green-500 flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(Bot, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-700 p-3 rounded-2xl\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-1\",\n                  children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                    animate: {\n                      scale: [1, 1.2, 1]\n                    },\n                    transition: {\n                      duration: 0.6,\n                      repeat: Infinity,\n                      delay: 0\n                    },\n                    className: \"w-2 h-2 bg-gray-400 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    animate: {\n                      scale: [1, 1.2, 1]\n                    },\n                    transition: {\n                      duration: 0.6,\n                      repeat: Infinity,\n                      delay: 0.2\n                    },\n                    className: \"w-2 h-2 bg-gray-400 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    animate: {\n                      scale: [1, 1.2, 1]\n                    },\n                    transition: {\n                      duration: 0.6,\n                      repeat: Infinity,\n                      delay: 0.4\n                    },\n                    className: \"w-2 h-2 bg-gray-400 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-1 mb-2\",\n            children: quickActions.map((action, index) => /*#__PURE__*/_jsxDEV(motion.button, {\n              whileHover: {\n                scale: 1.05\n              },\n              whileTap: {\n                scale: 0.95\n              },\n              onClick: () => {\n                setInputMessage(action.text);\n                setTimeout(handleSendMessage, 100);\n              },\n              className: \"px-2 py-1 bg-gray-700 hover:bg-gray-600 text-gray-300 rounded-lg text-xs transition-colors duration-200 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: action.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: action.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Ask about farming, crops, or sensors...\",\n              className: \"flex-1 bg-gray-700 text-white placeholder-gray-400 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n              whileHover: {\n                scale: 1.1\n              },\n              whileTap: {\n                scale: 0.9\n              },\n              onClick: handleSendMessage,\n              disabled: !inputMessage.trim(),\n              className: \"bg-green-500 hover:bg-green-600 disabled:bg-gray-600 text-white p-2 rounded-lg transition-colors duration-200\",\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(AgriBotChatbot, \"agzyR1rxGQF/DQKiwi8K+hiF528=\");\n_c = AgriBotChatbot;\nexport default AgriBotChatbot;\nvar _c;\n$RefreshReg$(_c, \"AgriBotChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","motion","AnimatePresence","MessageCircle","Send","X","Bot","User","Lightbulb","Droplets","Thermometer","ChevronDown","jsxDEV","_jsxDEV","Fragment","_Fragment","AgriBotChatbot","isOpen","externalIsOpen","onToggle","_s","internalIsOpen","setInternalIsOpen","undefined","setIsOpen","messages","setMessages","id","type","message","timestamp","Date","inputMessage","setInputMessage","isTyping","setIsTyping","showDropdown","setShowDropdown","messagesEndRef","farmingKnowledge","soilMoisture","low","high","optimal","temperature","humidity","lightConditions","dark","bright","commonProblems","crops","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","getCurrentSensorData","sensorData","isDark","window","db","analyzeSensorData","data","analysis","generateBotResponse","userMessage","toLowerCase","includes","crop","advice","Object","entries","charAt","toUpperCase","slice","problem","solution","watering","fertilizer","pruning","defaultResponses","Math","floor","random","length","handleSendMessage","trim","now","prev","setTimeout","botResponse","handleKeyPress","e","key","shiftKey","preventDefault","quickActions","text","icon","dailyTips","randomTip","tipMessage","children","div","initial","opacity","scale","y","animate","exit","transition","duration","className","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","size","toLocaleTimeString","hour","minute","repeat","Infinity","delay","ref","action","index","button","whileHover","whileTap","onClick","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Mihiranga Rathnayake/Documents/Git Hub/Agri-Bot/Web/src/components/AgriBotChatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { MessageCircle, Send, X, Bot, User, Lightbulb, Droplets, Thermometer, ChevronDown } from 'lucide-react';\r\n\r\nconst AgriBotChatbot = ({ isOpen: externalIsOpen, onToggle }) => {\r\n    const [internalIsOpen, setInternalIsOpen] = useState(false);\r\n    \r\n    // Use external control if provided, otherwise use internal state\r\n    const isOpen = externalIsOpen !== undefined ? externalIsOpen : internalIsOpen;\r\n    const setIsOpen = onToggle || setInternalIsOpen;\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            id: 1,\r\n            type: 'bot',\r\n            message: \"Hello! I'm Agri-Bot Assistant 🌱 I can help you with farming problems, crop advice, and analyze your sensor data. How can I assist you today?\",\r\n            timestamp: new Date()\r\n        }\r\n    ]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [showDropdown, setShowDropdown] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    // Agricultural knowledge base\r\n    const farmingKnowledge = {\r\n        soilMoisture: {\r\n            low: \"Your soil moisture is low. Consider watering your crops. For most vegetables, soil should be kept consistently moist but not waterlogged.\",\r\n            high: \"Your soil moisture is high. Ensure proper drainage to prevent root rot. Reduce watering frequency.\",\r\n            optimal: \"Your soil moisture levels are perfect! Continue your current watering schedule.\"\r\n        },\r\n        temperature: {\r\n            low: \"Temperature is low. Consider using row covers or greenhouse protection. Most crops grow best between 65-75°F (18-24°C).\",\r\n            high: \"Temperature is high. Provide shade cloth, increase watering, and ensure good ventilation. Heat stress can damage crops.\",\r\n            optimal: \"Temperature is in the optimal range for most crops. Great growing conditions!\"\r\n        },\r\n        humidity: {\r\n            low: \"Low humidity can stress plants. Consider misting or using humidity trays. Most plants prefer 40-60% humidity.\",\r\n            high: \"High humidity can promote fungal diseases. Ensure good air circulation and avoid overhead watering.\",\r\n            optimal: \"Humidity levels are ideal for healthy plant growth.\"\r\n        },\r\n        lightConditions: {\r\n            dark: \"It's currently dark. Most plants need 6-8 hours of sunlight daily. Consider supplemental grow lights if needed.\",\r\n            bright: \"Good light conditions! Plants are getting the sunlight they need for photosynthesis.\"\r\n        },\r\n        commonProblems: {\r\n            \"yellowing leaves\": \"Yellow leaves can indicate overwatering, nutrient deficiency (especially nitrogen), or natural aging. Check soil moisture and consider fertilizing.\",\r\n            \"wilting\": \"Wilting usually means underwatering, but can also indicate root problems or disease. Check soil moisture first.\",\r\n            \"brown spots\": \"Brown spots often indicate fungal diseases. Improve air circulation, avoid overhead watering, and remove affected leaves.\",\r\n            \"slow growth\": \"Slow growth can be due to insufficient light, poor soil, lack of nutrients, or wrong temperature. Check all growing conditions.\",\r\n            \"pest control\": \"For organic pest control, try neem oil, insecticidal soap, or beneficial insects. Identify the pest first for targeted treatment.\",\r\n            \"fertilizer\": \"Use balanced fertilizer (10-10-10) for general feeding. Nitrogen for leaves, phosphorus for roots/flowers, potassium for overall health.\",\r\n            \"watering\": \"Water deeply but less frequently. Check soil 1-2 inches down - if dry, it's time to water. Morning watering is best.\",\r\n            \"pruning\": \"Prune dead, diseased, or crossing branches. For vegetables, pinch flowers to encourage leaf growth, or vice versa.\"\r\n        },\r\n        crops: {\r\n            \"tomatoes\": \"Tomatoes need warm soil (60°F+), consistent watering, and support structures. Watch for blight and hornworms.\",\r\n            \"lettuce\": \"Lettuce prefers cool weather and consistent moisture. Harvest outer leaves first. Bolt in hot weather.\",\r\n            \"peppers\": \"Peppers need warm conditions and well-draining soil. Don't overwater - slightly dry soil intensifies flavor.\",\r\n            \"herbs\": \"Most herbs prefer well-draining soil and moderate watering. Pinch flowers to keep leaves tender.\",\r\n            \"carrots\": \"Carrots need loose, deep soil. Thin seedlings to prevent crowding. Keep soil consistently moist.\",\r\n            \"beans\": \"Beans fix nitrogen in soil. Don't over-fertilize with nitrogen. Provide support for climbing varieties.\"\r\n        }\r\n    };\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const getCurrentSensorData = () => {\r\n        // Get real sensor data from Firebase (same as your other components)\r\n        const sensorData = {\r\n            soilMoisture: 45, // Default values\r\n            temperature: 22,\r\n            humidity: 55,\r\n            isDark: false\r\n        };\r\n\r\n        // Try to get real data from Firebase if available\r\n        if (typeof window !== 'undefined' && window.db) {\r\n            // This would be updated with real-time data\r\n            // For now, using default values but structure is ready for integration\r\n        }\r\n\r\n        return sensorData;\r\n    };\r\n\r\n    const analyzeSensorData = () => {\r\n        const data = getCurrentSensorData();\r\n        let analysis = \"📊 Current Sensor Analysis:\\n\\n\";\r\n\r\n        // Soil moisture analysis\r\n        if (data.soilMoisture < 30) {\r\n            analysis += `🌱 ${farmingKnowledge.soilMoisture.low}\\n\\n`;\r\n        } else if (data.soilMoisture > 70) {\r\n            analysis += `🌱 ${farmingKnowledge.soilMoisture.high}\\n\\n`;\r\n        } else {\r\n            analysis += `🌱 ${farmingKnowledge.soilMoisture.optimal}\\n\\n`;\r\n        }\r\n\r\n        // Temperature analysis\r\n        if (data.temperature < 18) {\r\n            analysis += `🌡️ ${farmingKnowledge.temperature.low}\\n\\n`;\r\n        } else if (data.temperature > 30) {\r\n            analysis += `🌡️ ${farmingKnowledge.temperature.high}\\n\\n`;\r\n        } else {\r\n            analysis += `🌡️ ${farmingKnowledge.temperature.optimal}\\n\\n`;\r\n        }\r\n\r\n        // Light analysis\r\n        if (data.isDark) {\r\n            analysis += `☀️ ${farmingKnowledge.lightConditions.dark}`;\r\n        } else {\r\n            analysis += `☀️ ${farmingKnowledge.lightConditions.bright}`;\r\n        }\r\n\r\n        return analysis;\r\n    };\r\n\r\n    const generateBotResponse = (userMessage) => {\r\n        const message = userMessage.toLowerCase();\r\n\r\n        // Check for sensor data requests\r\n        if (message.includes('sensor') || message.includes('data') || message.includes('analysis')) {\r\n            return analyzeSensorData();\r\n        }\r\n\r\n        // Check for specific crop questions\r\n        for (const [crop, advice] of Object.entries(farmingKnowledge.crops)) {\r\n            if (message.includes(crop)) {\r\n                return `🌿 ${crop.charAt(0).toUpperCase() + crop.slice(1)} Growing Tips:\\n${advice}`;\r\n            }\r\n        }\r\n\r\n        // Check for common problems\r\n        for (const [problem, solution] of Object.entries(farmingKnowledge.commonProblems)) {\r\n            if (message.includes(problem)) {\r\n                return `💡 ${problem.charAt(0).toUpperCase() + problem.slice(1)} Solution:\\n${solution}`;\r\n            }\r\n        }\r\n\r\n        // General farming keywords\r\n        if (message.includes('water') || message.includes('irrigation')) {\r\n            return \"💧 Watering Tips:\\n\" + farmingKnowledge.commonProblems.watering;\r\n        }\r\n\r\n        if (message.includes('fertiliz') || message.includes('nutrient')) {\r\n            return \"🌱 Fertilizer Advice:\\n\" + farmingKnowledge.commonProblems.fertilizer;\r\n        }\r\n\r\n        if (message.includes('pest') || message.includes('bug') || message.includes('insect')) {\r\n            return \"🐛 Pest Control:\\n\" + farmingKnowledge.commonProblems[\"pest control\"];\r\n        }\r\n\r\n        if (message.includes('prune') || message.includes('trim')) {\r\n            return \"✂️ Pruning Guide:\\n\" + farmingKnowledge.commonProblems.pruning;\r\n        }\r\n\r\n        // Weather-related questions\r\n        if (message.includes('weather') || message.includes('climate')) {\r\n            return \"🌤️ Weather Considerations:\\nMonitor your local weather and adjust watering, protection, and harvesting schedules accordingly. Your sensors help track microclimatic conditions!\";\r\n        }\r\n\r\n        // Seasonal advice\r\n        if (message.includes('season') || message.includes('when to plant')) {\r\n            return \"🗓️ Seasonal Planting Guide:\\n• Spring: Lettuce, peas, carrots, herbs\\n• Summer: Tomatoes, peppers, beans, squash\\n• Fall: Broccoli, cabbage, spinach\\n• Winter: Plan and prepare for next season!\";\r\n        }\r\n\r\n        // Soil-related questions\r\n        if (message.includes('soil') && !message.includes('moisture')) {\r\n            return \"🌍 Soil Health Tips:\\n• Test pH (6.0-7.0 for most crops)\\n• Add compost for nutrients\\n• Ensure good drainage\\n• Rotate crops to prevent depletion\\n• Your soil moisture sensor helps monitor watering needs!\";\r\n        }\r\n\r\n        // Disease identification\r\n        if (message.includes('disease') || message.includes('sick') || message.includes('dying')) {\r\n            return \"🏥 Plant Disease Diagnosis:\\n• Yellow leaves: Overwatering or nitrogen deficiency\\n• Brown/black spots: Fungal infection\\n• Wilting: Root problems or underwatering\\n• Stunted growth: Nutrient deficiency or poor soil\\nSend me more specific symptoms for better diagnosis!\";\r\n        }\r\n\r\n        // Harvest timing\r\n        if (message.includes('harvest') || message.includes('ready') || message.includes('ripe')) {\r\n            return \"🌾 Harvest Timing:\\n• Tomatoes: When fully colored but still firm\\n• Lettuce: Outer leaves first, before bolting\\n• Peppers: When full size and colored\\n• Herbs: Before flowering for best flavor\\nWhat crop are you asking about?\";\r\n        }\r\n\r\n        // Default responses for farming context\r\n        const defaultResponses = [\r\n            \"🌱 I specialize in agricultural advice! Ask me about:\\n• Crop care and planting\\n• Soil management\\n• Pest and disease control\\n• Sensor data analysis\\n• Watering and fertilization\",\r\n            \"🚜 I can help with farming problems like:\\n• Plant diseases and pests\\n• Watering schedules\\n• Fertilization timing\\n• Interpreting your IoT sensor readings\\n• Seasonal planting advice\",\r\n            \"🌾 Try asking about:\\n• Specific crops (tomatoes, lettuce, etc.)\\n• Common plant problems\\n• 'Analyze sensors' for current data\\n• Seasonal growing tips\\n• Soil and water management\",\r\n            \"🌿 I'm your agricultural assistant! I can help with:\\n• Plant care and troubleshooting\\n• Soil and water conditions\\n• Pest control strategies\\n• Harvest timing\\n• Smart farming with your IoT sensors\"\r\n        ];\r\n\r\n        return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!inputMessage.trim()) return;\r\n\r\n        const userMessage = {\r\n            id: Date.now(),\r\n            type: 'user',\r\n            message: inputMessage,\r\n            timestamp: new Date()\r\n        };\r\n\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInputMessage('');\r\n        setIsTyping(true);\r\n\r\n        // Simulate typing delay\r\n        setTimeout(() => {\r\n            const botResponse = {\r\n                id: Date.now() + 1,\r\n                type: 'bot',\r\n                message: generateBotResponse(inputMessage),\r\n                timestamp: new Date()\r\n            };\r\n\r\n            setMessages(prev => [...prev, botResponse]);\r\n            setIsTyping(false);\r\n        }, 1000 + Math.random() * 1000);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    const quickActions = [\r\n        { text: \"Analyze my sensors\", icon: \"📊\" },\r\n        { text: \"Watering advice\", icon: \"💧\" },\r\n        { text: \"Pest control help\", icon: \"🐛\" },\r\n        { text: \"Fertilizer tips\", icon: \"🌱\" },\r\n        { text: \"Tomato growing\", icon: \"🍅\" },\r\n        { text: \"Soil health\", icon: \"🌍\" },\r\n        { text: \"Disease diagnosis\", icon: \"🏥\" },\r\n        { text: \"Harvest timing\", icon: \"🌾\" }\r\n    ];\r\n\r\n    // Daily farming tips\r\n    const dailyTips = [\r\n        \"💡 Tip: Water plants early morning to reduce evaporation and prevent fungal diseases!\",\r\n        \"💡 Tip: Companion planting - grow basil near tomatoes to improve flavor and repel pests!\",\r\n        \"💡 Tip: Check soil pH regularly - most vegetables prefer 6.0-7.0 pH for optimal nutrient uptake!\",\r\n        \"💡 Tip: Mulch around plants to retain moisture and suppress weeds naturally!\",\r\n        \"💡 Tip: Rotate crops each season to prevent soil depletion and reduce pest buildup!\"\r\n    ];\r\n\r\n    // Add a daily tip when chatbot opens\r\n    useEffect(() => {\r\n        if (isOpen && messages.length === 1) {\r\n            const randomTip = dailyTips[Math.floor(Math.random() * dailyTips.length)];\r\n            setTimeout(() => {\r\n                const tipMessage = {\r\n                    id: Date.now(),\r\n                    type: 'bot',\r\n                    message: randomTip,\r\n                    timestamp: new Date()\r\n                };\r\n                setMessages(prev => [...prev, tipMessage]);\r\n            }, 2000);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Chat Window */}\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div\r\n                        initial={{ opacity: 0, scale: 0.8, y: 20 }}\r\n                        animate={{ opacity: 1, scale: 1, y: 0 }}\r\n                        exit={{ opacity: 0, scale: 0.8, y: 20 }}\r\n                        transition={{ duration: 0.3 }}\r\n                        className=\"fixed bottom-24 left-8 w-[480px] h-[600px] bg-dark-800/95 backdrop-blur-xl border border-primary-500/20 rounded-2xl shadow-2xl z-40 flex flex-col\"\r\n                    >\r\n                        {/* Header */}\r\n                        <div className=\"p-4 border-b border-gray-700 flex items-center space-x-3\">\r\n                            <div className=\"relative\">\r\n                                <Bot className=\"w-8 h-8 text-green-400\" />\r\n                                <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse\" />\r\n                            </div>\r\n                            <div>\r\n                                <h3 className=\"font-semibold text-white\">Agri-Bot Assistant</h3>\r\n                                <p className=\"text-xs text-gray-400\">Agricultural Expert</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Messages */}\r\n                        <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                            {messages.map((msg) => (\r\n                                <motion.div\r\n                                    key={msg.id}\r\n                                    initial={{ opacity: 0, y: 10 }}\r\n                                    animate={{ opacity: 1, y: 0 }}\r\n                                    className={`flex ${msg.type === 'user' ? 'justify-end' : 'justify-start'}`}\r\n                                >\r\n                                    <div className={`flex items-start space-x-2 max-w-[80%] ${msg.type === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`}>\r\n                                        <div className={`w-6 h-6 rounded-full flex items-center justify-center ${msg.type === 'user' ? 'bg-primary-500' : 'bg-green-500'\r\n                                            }`}>\r\n                                            {msg.type === 'user' ? <User size={14} /> : <Bot size={14} />}\r\n                                        </div>\r\n                                        <div className={`p-3 rounded-2xl ${msg.type === 'user'\r\n                                            ? 'bg-primary-500 text-white'\r\n                                            : 'bg-gray-700 text-gray-100'\r\n                                            }`}>\r\n                                            <p className=\"text-sm whitespace-pre-line\">{msg.message}</p>\r\n                                            <p className=\"text-xs opacity-70 mt-1\">\r\n                                                {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </motion.div>\r\n                            ))}\r\n\r\n                            {isTyping && (\r\n                                <motion.div\r\n                                    initial={{ opacity: 0, y: 10 }}\r\n                                    animate={{ opacity: 1, y: 0 }}\r\n                                    className=\"flex justify-start\"\r\n                                >\r\n                                    <div className=\"flex items-start space-x-2\">\r\n                                        <div className=\"w-6 h-6 rounded-full bg-green-500 flex items-center justify-center\">\r\n                                            <Bot size={14} />\r\n                                        </div>\r\n                                        <div className=\"bg-gray-700 p-3 rounded-2xl\">\r\n                                            <div className=\"flex space-x-1\">\r\n                                                <motion.div\r\n                                                    animate={{ scale: [1, 1.2, 1] }}\r\n                                                    transition={{ duration: 0.6, repeat: Infinity, delay: 0 }}\r\n                                                    className=\"w-2 h-2 bg-gray-400 rounded-full\"\r\n                                                />\r\n                                                <motion.div\r\n                                                    animate={{ scale: [1, 1.2, 1] }}\r\n                                                    transition={{ duration: 0.6, repeat: Infinity, delay: 0.2 }}\r\n                                                    className=\"w-2 h-2 bg-gray-400 rounded-full\"\r\n                                                />\r\n                                                <motion.div\r\n                                                    animate={{ scale: [1, 1.2, 1] }}\r\n                                                    transition={{ duration: 0.6, repeat: Infinity, delay: 0.4 }}\r\n                                                    className=\"w-2 h-2 bg-gray-400 rounded-full\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </motion.div>\r\n                            )}\r\n                            <div ref={messagesEndRef} />\r\n                        </div>\r\n\r\n                        {/* Quick Actions */}\r\n                        <div className=\"p-2 border-t border-gray-700\">\r\n                            <div className=\"flex flex-wrap gap-1 mb-2\">\r\n                                {quickActions.map((action, index) => (\r\n                                    <motion.button\r\n                                        key={index}\r\n                                        whileHover={{ scale: 1.05 }}\r\n                                        whileTap={{ scale: 0.95 }}\r\n                                        onClick={() => {\r\n                                            setInputMessage(action.text);\r\n                                            setTimeout(handleSendMessage, 100);\r\n                                        }}\r\n                                        className=\"px-2 py-1 bg-gray-700 hover:bg-gray-600 text-gray-300 rounded-lg text-xs transition-colors duration-200 flex items-center space-x-1\"\r\n                                    >\r\n                                        <span>{action.icon}</span>\r\n                                        <span>{action.text}</span>\r\n                                    </motion.button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Input */}\r\n                        <div className=\"p-4 border-t border-gray-700\">\r\n                            <div className=\"flex space-x-2\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputMessage}\r\n                                    onChange={(e) => setInputMessage(e.target.value)}\r\n                                    onKeyPress={handleKeyPress}\r\n                                    placeholder=\"Ask about farming, crops, or sensors...\"\r\n                                    className=\"flex-1 bg-gray-700 text-white placeholder-gray-400 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n                                />\r\n                                <motion.button\r\n                                    whileHover={{ scale: 1.1 }}\r\n                                    whileTap={{ scale: 0.9 }}\r\n                                    onClick={handleSendMessage}\r\n                                    disabled={!inputMessage.trim()}\r\n                                    className=\"bg-green-500 hover:bg-green-600 disabled:bg-gray-600 text-white p-2 rounded-lg transition-colors duration-200\"\r\n                                >\r\n                                    <Send size={16} />\r\n                                </motion.button>\r\n                            </div>\r\n                        </div>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AgriBotChatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}